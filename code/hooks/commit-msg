#!/bin/sh
#
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file..

############################################################################
## This hook does the following:                                           #
##                                                                         #
## Checks if the commit is being done to the main branch.                  #
## If it is, it creates a build and commits the changes to the Alexa repo. #
##                                                                         #
## Note: If the Alexa repo is not present locally, it is cloned.           #
############################################################################

MAIN_BRANCH="main"
BUILD_FOLDER="build"
CODE_FOLDER="code"
SRC_FOLDER="$CODE_FOLDER/src"

current_branch="$(git rev-parse --abbrev-ref HEAD)"

if [ "$current_branch" = "$MAIN_BRANCH" ]
then
	# Init the Alexa build repo
	sh "./$CODE_FOLDER/scripts/init-build.sh"

	git_diff="$(git diff --cached --name-only)"
	files_in_dir_changed()
	{
		echo "$git_diff" | grep --quiet "$1"
	}

	if (files_in_dir_changed "skill-package")
	then
		npm -C "$CODE_FOLDER" run build:skill-package
		[ $? -ne 0 ] && exit 1 # If the skill-package build script failed, exit with an error
	fi

	if (files_in_dir_changed "$CODE_FOLDER/package.json" || files_in_dir_changed "$SRC_FOLDER")
	then
		npm -C "$CODE_FOLDER" run build
		[ $? -ne 0 ] && exit 1 # If the build script failed, exit with an error
	fi

	commit_msg="$(cat "$1")"

	cd "$BUILD_FOLDER"
	git add --all
	git commit -m "$commit_msg"
fi

exit 0
