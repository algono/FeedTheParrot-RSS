#!/bin/sh
#
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file..

############################################################################
## This hook does the following:                                           #
##                                                                         #
## Checks if the commit is being done to the main branch.                  #
## If it is, it creates a build and commits the changes to the Alexa repo. #
##                                                                         #
## Note: If the Alexa repo is not present locally, it is cloned.           #
############################################################################

MAIN_BRANCH="main"
BUILD_FOLDER="build"
CODE_FOLDER="code"
SRC_FOLDER="$CODE_FOLDER/src"

current_branch="$(git rev-parse --abbrev-ref HEAD)"

if [ "$current_branch" = "$MAIN_BRANCH" ]
then
	# If the skill build is not present, clone it
	if [ ! -d "$BUILD_FOLDER" ]
	then
		skillId=$(tr -d '\n' < "./$SRC_FOLDER/index.ts"| tr -d ' ' | sed -n 's/.*withSkillId\(.*\)/\1/p' | cut -f1 -d ")" | tr -d "()\"'")
		if [ -n "$skillId" ]
		then
			# Workaround for ask-cli issue: using a temp folder
			# (ask init fails if current folder has a git repo)
			starting_dir="$(pwd)"
			tmp_dir="$BUILD_FOLDER-tmp"
			mkdir "$tmp_dir"
			cd "$tmp_dir"

			# Run the ask init command and store the status code
			echo "$BUILD_FOLDER" | ask init --hosted-skill-id "$skillId"
			ask_init_status_code=$?
			
			cd "$starting_dir"

			if [ $ask_init_status_code -eq 0 ]
			then
				# Move the build repo back to the original folder
				mv "$tmp_dir/$BUILD_FOLDER" .
				# Remove the temp folder
				rm -rf "$tmp_dir"				
			else
				# If the ask init command failed, exit with an error
				exit 1
			fi
		else
			echo "Error: The $BUILD_FOLDER folder does not exist, and the skill id could not be obtained."
			echo "Please, look up the skill id for this skill and run the following command in the root folder:"
			echo "\"echo \"$BUILD_FOLDER\" | ask init --hosted-skill-id <skill-id>\""
			exit 1
		fi
	fi

	git_diff="$(git diff --cached --name-only)"
	files_in_dir_changed()
	{
		echo "$git_diff" | grep --quiet "$1"
	}

	if (files_in_dir_changed "skill-package")
	then
		npm -C "$CODE_FOLDER" run build:skill-package
		[ $? -ne 0 ] && exit 1 # If the skill-package build script failed, exit with an error
	fi

	if (files_in_dir_changed "$CODE_FOLDER/package.json" || files_in_dir_changed "$SRC_FOLDER")
	then
		npm -C "$CODE_FOLDER" run build
		[ $? -ne 0 ] && exit 1 # If the build script failed, exit with an error
	fi

	commit_msg="$(cat "$1")"

	git --git-dir="$BUILD_FOLDER/.git" --work-tree="$BUILD_FOLDER" commit -am "$commit_msg"
fi

exit 0
